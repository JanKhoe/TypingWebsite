@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: white;
  background: #000000; /* Black background */
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}



.ParagraphWrapper:not(:focus) {
  filter: blur(4px);  /* Apply blur effect when the input is not focused */
  -webkit-filter: blur(4px);
}

.ParagraphWrapper:focus{
  outline:none;
}

.correct{
  color: green;
}

.incorrect{
  color: red;
  background-color: rgba(255, 0, 0, 0.2); /* Red background with 20% opacity */
}

.results-header-text{
  color: #000000;
}
.results-container{
  display: 'inline-block';
  background-color: lightgray;
  width: fit-content;
  width: -webkit-fit-content;
  height: fit-content;
}

/* Styling for Restart Button */

.sync-button {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.sync-icon {
  transition: transform 0.3s ease-in-out;
}

.sync-button:hover .sync-icon {
  transform: rotate(180deg);
}


.sync-button::after {
  content: "Restart";
  position: absolute;
  bottom: -1.25rem;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  font-size: 0.7em;
  pointer-events: none;
}

.sync-button:hover::after {
  opacity: 1;
}

/* END Restart Button */

/* Styling for Next Button */

@keyframes slide-right {
  0% {
    transform: translateX(-4px);
  }
  100% {
    transform: translateX(6px);
  }
}

.next-button {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.next-button:hover .next-icon{
  animation: slide-right 0.3s ease-in; /* Loop animation */
  transform: translateX(6px);
}

.next-button::after {
  content: "Next";
  position: absolute;
  bottom: -1.25rem;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  font-size: 0.7em;
  pointer-events: none;
}

.next-button:hover::after {
  opacity: 1;
}
/* END Next Button */

/* START Cursor Styling */

.typing-cursor {
  position: relative;
}

/* Create the cursor using ::after pseudo-element */
.typing-cursor::after {
  content: '';
  position: absolute;
  top: 3px;
  width: 0.5px;  /* Standard cursor width */
  height: 1em;  /* Match the line height of the text */
  background-color: white;  /* Match the text color */
  animation: blink 1.06s steps(2, start) infinite;
  /* The steps(2) makes it a sharp blink rather than a fade */
}

/* Define the blink animation */
@keyframes blink {
  to {
    visibility: hidden;
  }
}

/* Optional: If you want to prevent text selection */
.typing-cursor {
  user-select: none;
}

/* END Cursor Styling */


/* START dropdown mode selector Styling */

.mode-selector {
  position: relative;
  font-family: system-ui, -apple-system, sans-serif;
  width: fit-content;
  user-select: none;
  text-align: center;
}

.mode-header {
  background-color: #1a1f2e;
  color: white;
  padding: 8px 12px;
  cursor: pointer;
  border-radius: 4px;
}

.mode-options {
  z-index: 1;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  background-color: #1a1f2e;
  overflow: hidden;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  pointer-events: none;
  transition: all 0.2s ease-in-out;
  border-radius:0 0px 10px 10px;
}

/* Show dropdown on header hover */
.mode-selector:hover .mode-options,
/* Keep dropdown visible when hovering the options */
.mode-options:hover {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
  pointer-events: all;
}

.mode-option {
  color: white;
  padding: 8px 12px;
  cursor: pointer;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.15s ease;
}

.mode-option:last-child {
  border-bottom: none;
  border-radius:0 0px 10px 10px;
}

.mode-option:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: #4f9eed;
}
/* END dropdown mode selector Styling */